@page "/Perfil/{IdUsuario:int}"
@inject NavigationManager Navigation
@inject UserService userService

<EditForm Model="usuario" OnValidSubmit="HandleValidSubmit">
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3>Datos personales</h3>
            <div>
                <img src="data:image/png;base64,@Convert.ToBase64String(usuario.FotoPerfil)" alt="Foto de Perfil" class="rounded-circle" width="100" height="100" />
                <button type="button" class="btn btn-primary mt-2">Cambiar</button>
                <a href="#" class="d-block mt-2">¿Cambiar mi contraseña?</a>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="nombre" class="form-label">Nombres</label>
                    <InputText id="nombre" class="form-control" @bind-Value="usuario.Nombre" readonly />
                </div>
                <div class="col-md-6 mb-3">
                    <label for="apellido" class="form-label">Apellidos</label>
                    <InputText id="apellido" class="form-control" @bind-Value="usuario.Apellido" readonly />
                </div>
               
        </div>
        <div class="card-footer d-flex justify-content-end">
            <button type="submit" class="btn btn-success">Guardar</button>
        </div>
    </div>
    </div>
</EditForm>

@code {
   
    [Parameter]
    public int IdUsuario { get; set; }
    private Usuario usuario = new Usuario();
    protected override async Task OnInitializedAsync()
    {
        usuario = await userService.GetUserByIdAsync(IdUsuario);

    }

    private async Task HandleValidSubmit()
    {
        
    }
}