@page "/SignUp"

@inject UserService userService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<div class="loginBox">
    <img class="user" src="Images/usuario.png" alt="Foto del Usuario" height="100px" width="100px">
    <h3>Registrarse</h3>

    <EditForm Model="Usuario" OnValidSubmit="HandleValidSubmit">
        <div class="inputBox">
            <InputText id="nombre" type="text" @bind-Value="Usuario.Nombre" placeholder="Nombres" />
            <InputText id="apellido" type="text" @bind-Value="Usuario.Apellido" placeholder="Apellidos" />
            <InputText id="email" type="text" @bind-Value="Usuario.Correo" placeholder="Email" />
            <InputText id="pass" type="password" @bind-Value="Usuario.Clave" placeholder="Contraseña" />
            <InputText id="telefono" type="text" @bind-Value="Usuario.Telefono" placeholder="Telefono" />
            <InputText id="direccion" type="text" @bind-Value="Usuario.Direccion" placeholder="Direccion" />
            <InputFile OnChange="HandleSelected" />
        </div>
        <button type="submit" class="btn-login">Crear Cuenta</button>
    </EditForm>
</div>

@code {
    private Usuario Usuario = new Usuario();
 
    private IBrowserFile fotoPerfil;

    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        fotoPerfil = e.File;
        var buffer = new byte[fotoPerfil.Size];
        await fotoPerfil.OpenReadStream().ReadAsync(buffer);
        Usuario.FotoPerfil = buffer;
    }
    private async Task HandleValidSubmit()
    {
       

        bool isRegistered = await userService.RegisterUser(Usuario);

        if (isRegistered)
        {
            navigationManager.NavigateTo("/");
        }
        else
        {
            
        }
    }

}