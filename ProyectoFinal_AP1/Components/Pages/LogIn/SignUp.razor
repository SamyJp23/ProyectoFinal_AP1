@page "/SignUp"
@inject UserService userService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Registrarse</PageTitle>

<EditForm Model="Usuario" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-dark text-white" style="text-align: center;">
            <h3><i class="fas fa-clipboard-list"></i> Crear Cuenta</h3>
        </div>
        <div class="card-body">

            <div class="mb-3">
                <label for="Nombre" class="form-label">Nombre</label>
                <InputText @bind-Value="Usuario.Nombre" class="form-control" />
                <ValidationMessage For="@(() => Usuario.Nombre)" />
            </div>
            <div class="mb-3">
                <label for="Apellido" class="form-label">Apellido</label>
                <InputText @bind-Value="Usuario.Apellido" class="form-control" />
                <ValidationMessage For="@(() => Usuario.Apellido)" />
            </div>
            <select id="genero" @bind="Usuario.Genero" class="form-control">
                <option value="">Seleccione el género</option>
                <option value="Masculino">Masculino</option>
                <option value="Femenino">Femenino</option>
                <option value="Otro">Otro</option>
            </select>
            <div class="mb-3">
                <label for="Correo" class="form-label">Correo</label>
                <InputText @bind-Value="Usuario.Correo" class="form-control" />
                <ValidationMessage For="@(() => Usuario.Correo)" />
            </div>
            <div class="mb-3">
                <label for="Clave" class="form-label">Clave</label>
                <InputText @bind-Value="Usuario.Clave" class="form-control" />
                <ValidationMessage For="@(() => Usuario.Clave)" />
            </div>
            <div class="mb-3">
                <label for="Telefono" class="form-label">Telefono</label>
                <InputText @bind-Value="Usuario.Telefono" class="form-control" />
                <ValidationMessage For="@(() => Usuario.Telefono)" />
            </div>
            <div class="mb-3">
                <label for="Direccion" class="form-label">Direccion</label>
                <InputText @bind-Value="Usuario.Direccion" class="form-control" />
                <ValidationMessage For="@(() => Usuario.Direccion)" />
            </div>
            <div class="form-group">
                <label for="fotoPerfil">Foto de Perfil</label>
                <InputFile id="fotoPerfil" OnChange="CargarFotoPerfil" />
            </div>
        </div>
        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar</button>
                <a type="button" href="/Usuarios" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Retroceder</a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private Usuario Usuario = new Usuario();

    private IBrowserFile fotoPerfil;
    [Inject] protected ToastService toastService { get; set; }

    private async Task CargarFotoPerfil(InputFileChangeEventArgs e)
    {
        fotoPerfil = e.File;
        var buffer = new byte[fotoPerfil.Size];
        await fotoPerfil.OpenReadStream().ReadAsync(buffer);
        Usuario.FotoPerfil = buffer;
    }
    private async Task Guardar()
    {


        bool guardo = await userService.RegisterUser(Usuario);

        if (guardo)
        {
            navigationManager.NavigateTo("/");
            NotificacionGuardo();
        }
        else
        {
            
        }
    }
    public void NotificacionGuardo()
    {
        toastService.Notify(new(ToastType.Success, $"Se Creo la cuenta Correctamente."));
    }
    public void NotificacionError()
    {
        toastService.Notify(new(ToastType.Danger, $"Error al crear la cuenta."));
    }

}