@page "/AgregarEntrenador"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject EntrenadorService entrenadorService

<EditForm Model="nuevoEntrenador" OnValidSubmit="GuardarEntrenador">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="nuevoEntrenador.Nombre" />
    </div>

    <div class="form-group">
        <label for="nivel">Nivel</label>
        <InputText id="nivel" class="form-control" @bind-Value="nuevoEntrenador.Nivel" />
    </div>

    <div class="form-group">
        <label for="genero">Género</label>
        <InputSelect id="genero" class="form-control" @bind-Value="nuevoEntrenador.Genero">
            <option value="">Seleccionar</option>
            <option value="Masculino">Masculino</option>
            <option value="Femenino">Femenino</option>
            <option value="Otro">Otro</option>
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="fotoPerfil">Foto de Perfil</label>
        <InputFile id="fotoPerfil" OnChange="CargarFotoPerfil" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {
    private Entrenador nuevoEntrenador = new Entrenador();

    private async Task CargarFotoPerfil(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);
        nuevoEntrenador.FotoPerfil = buffer;
    }

    private async Task GuardarEntrenador()
    {
        await entrenadorService.GuardarEntrenador(nuevoEntrenador);
        NavigationManager.NavigateTo("/Entrenadores");
    }
}
