@page "/AgregarEquipo"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject EquipoService equipoService
@using EquipoModel = ProyectoFinal_AP1.Models.Equipos

@inject EntrenadorService entrenadorService

<EditForm Model="nuevoEquipo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-dark text-white" style="text-align: center;">
            <h3><i class="fas fa-clipboard-list"></i> Agregar Equipo</h3>
        </div>
        <div class="card-body">
           
            <div class="mb-3">
                <label for="Nombre" class="form-label">Nombre</label>
                <InputText @bind-Value="nuevoEquipo.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => nuevoEquipo.Descripcion)" />
            </div>
            <div class="mb-3">
                <label for="Apellido" class="form-label">Tipo</label>
                <InputText @bind-Value="nuevoEquipo.Tipo" class="form-control" />
                <ValidationMessage For="@(() => nuevoEquipo.Tipo)" />
            </div>
           
            <div class="form-group">
                <label for="fotoPerfil">Foto</label>
                <InputFile id="fotoPerfil" OnChange="CargarFotoPerfil" />
            </div>
        </div>
        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar</button>
                <a type="button" href="/Usuarios" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Retroceder</a>
            </div>
        </div>
    </div>
</EditForm>

@code {

 
    private EquipoModel nuevoEquipo = new EquipoModel();

    private async Task CargarFotoPerfil(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);
        nuevoEquipo.Foto = buffer;
    }

    private async Task Guardar()
    {
        await equipoService.GuardarAsync(nuevoEquipo);
        NavigationManager.NavigateTo("/EquiposAdmin");
    }
}
